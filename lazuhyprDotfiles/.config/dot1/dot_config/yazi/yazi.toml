
[mgr]
	ratio          = [1, 3, 4]
	sort_by        = "alphabetical"
	sort_sensitive = false
	sort_reverse   = false
	sort_dir_first = false
	linemode       = "none"
	show_symlink   = true
	scrolloff      = 5

[preview]
	tab_size        = 4
	max_width       = 900
	max_height      = 900
	cache_dir       = ""
	image_filter    = "triangle"
	image_quality   = 90
	sixel_fraction  = 10
	ueberzug_scale  = 1
	ueberzug_offset = [0, 0, 0, 0]

[opener]
	edit = [
		{ run = 'nvim "$@"', desc = "$EDITOR", block = true, for = "unix" },
		{ run = 'code "%*"', orphan = true, desc = "code", for = "windows" },
		{ run = 'code -w "%*"', block = true, desc = "code (block)", for = "windows" },
	]
	open = [
		{ run = 'xdg-open "$@"', desc = "Open", for = "linux" },
		{ run = 'open "$@"', desc = "Open", for = "macos" },
		{ run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
	]
	reveal = [
		{ run = 'open -R "$1"', desc = "Reveal", for = "macos" },
		{ run = 'explorer /select, "%1"', orphan = true, desc = "Reveal", for = "windows" },
		{ run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
	]
	extract = [
		{ run = 'unar "$1"', desc = "Extract here", for = "unix" },
		{ run = 'unar "%1"', desc = "Extract here", for = "windows" },
	]
	play = [
		{ run = 'mpv "$@"', orphan = true, for = "unix" },
		{ run = 'mpv "%1"', orphan = true, for = "windows" },
		{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
	]

[open]
	rules = [
		{ name = "*/", use = [
			"edit",
			"open",
			"reveal",
		] },

		{ mime = "text/*", use = [
			"edit",
			"reveal",
		] },
		{ mime = "image/*", use = [
			"open",
			"reveal",
		] },
		{ mime = "video/*", use = [
			"play",
			"reveal",
		] },
		{ mime = "audio/*", use = [
			"play",
			"reveal",
		] },
		{ mime = "inode/x-empty", use = [
			"edit",
			"reveal",
		] },

		{ mime = "application/json", use = [
			"edit",
			"reveal",
		] },
		{ mime = "*/javascript", use = [
			"edit",
			"reveal",
		] },

		{ mime = "*", use = [
			"open",
			"reveal",
		] },
	]

[plugin]
	fetchers = [
		# Mimetype
		{ id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" },
	]
	preloaders = [
		# Image
		{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
		{ mime = "image/*", run = "image" },
		# Video
		{ mime = "video/*", run = "video" },
		# PDF
		{ mime = "application/pdf", run = "pdf" },
		# Font
		{ mime = "font/*", run = "font" },
		{ mime = "application/vnd.ms-opentype", run = "font" },
	]
	prepend_previewers = [

		{ name = "*/", run = "eza-preview" },

		# Archive previewer
		{ mime = "application/*zip", run = "ouch" },
		{ mime = "application/x-tar", run = "ouch" },
		{ mime = "application/x-bzip2", run = "ouch" },
		{ mime = "application/x-7z-compressed", run = "ouch" },
		{ mime = "application/x-rar", run = "ouch" },
		{ mime = "application/x-xz", run = "ouch" },
		{ mime = "application/xz", run = "ouch" },

	]

[input]
	# cd
	cd_title  = "Change directory:"
	cd_origin = "top-center"
	cd_offset = [0, 2, 50, 3]

	# create
	create_title  = ["Create:", "Create (dir):"]
	create_origin = "top-center"
	create_offset = [0, 2, 50, 3]

	# rename
	rename_title  = "Rename:"
	rename_origin = "hovered"
	rename_offset = [0, 1, 50, 3]

	# trash
	trash_title  = "Move {n} selected file{s} to trash? (y/N)"
	trash_origin = "top-center"
	trash_offset = [0, 2, 50, 3]

	# delete
	delete_title  = "Delete {n} selected file{s} permanently? (y/N)"
	delete_origin = "top-center"
	delete_offset = [0, 2, 50, 3]

	# filter
	filter_title  = "Filter:"
	filter_origin = "top-center"
	filter_offset = [0, 2, 50, 3]

	# find
	find_title  = ["Find next:", "Find previous:"]
	find_origin = "top-center"
	find_offset = [0, 2, 50, 3]

	# search
	search_title  = "Search via {n}:"
	search_origin = "top-center"
	search_offset = [0, 2, 50, 3]

	# shell
	shell_title  = ["Shell:", "Shell (block):"]
	shell_origin = "top-center"
	shell_offset = [0, 2, 50, 3]

	# overwrite
	overwrite_title  = "Overwrite an existing file? (y/N)"
	overwrite_origin = "top-center"
	overwrite_offset = [0, 2, 50, 3]

	# quit
	quit_title  = "{n} task{s} running, sure to quit? (y/N)"
	quit_origin = "top-center"
	quit_offset = [0, 2, 50, 3]
